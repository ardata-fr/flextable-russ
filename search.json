[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reporting tabulaire en R avec le package ’flextable’",
    "section": "",
    "text": "1 Introduction\nLe principal objectif de ‘flextable’ est de fournir une solution efficace pour la création et la mise en forme de tableaux.\nLa principale source de documentation est ici : https://ardata-fr.github.io/flextable-book/",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "01-flextable-intro.html",
    "href": "01-flextable-intro.html",
    "title": "2  Introduction à flextable",
    "section": "",
    "text": "2.1 Reporting tabulaire avec flextable\nSon but est de simplifier la création et la personnalisation de tableaux en offrant une interface souple et conviviale au sein de l’environnement R. Le package propose de nombreuses fonctionnalités pour préparer la structure des tableaux, formater le contenu et l’apparence.\nCode\nlibrary(flextable)\nft &lt;- summarizor(cars) %&gt;%\n  as_flextable(sep_w = 0) %&gt;%\n  color(\n    i = ~ stat == \"range\",\n    color = \"pink\"\n  ) %&gt;%\n  bold(j = 1) %&gt;%\n  italic(j = 2, italic = TRUE)\nft\n\n\nStatistic(N=50)speedMean (SD)15.4 (5.3)Median (IQR)15.0 (7.0)Range4.0 - 25.0distMean (SD)43.0 (25.8)Median (IQR)36.0 (30.0)Range2.0 - 120.0",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction à flextable</span>"
    ]
  },
  {
    "objectID": "01-flextable-intro.html#reporting-tabulaire-avec-flextable",
    "href": "01-flextable-intro.html#reporting-tabulaire-avec-flextable",
    "title": "2  Introduction à flextable",
    "section": "",
    "text": "2.1.1 Fonctions principales\nDeux fonctions principales sont fournies afin de créer des tableaux :\n\nflextable() permet de créer facilement un tableau de reporting à partir d’un data.frame.\n\n\n\nCode\nhead(airquality) %&gt;%\n  flextable() %&gt;%\n  autofit()\n\n\nOzoneSolar.RWindTempMonthDay411907.46751361188.072521214912.674531831311.5625414.356552814.96656\n\n\n\nLa fonction as_flextable() est founie pour transformer des objets R en tableaux ‘flextable’ sans avoir à préparer le data.frame original.\n\n\n\nCode\nft &lt;- with(palmerpenguins::penguins, table(species, island)) %&gt;%\n  as_flextable()\nft\n\n\nspeciesislandBiscoeDreamTorgersenTotalAdelieCount44 (12.8%)56 (16.3%)52 (15.1%)152 (44.2%)Mar. pct (1)26.2% ; 28.9%45.2% ; 36.8%100.0% ; 34.2%ChinstrapCount0 (0.0%)68 (19.8%)0 (0.0%)68 (19.8%)Mar. pct0.0% ; 0.0%54.8% ; 100.0%0.0% ; 0.0%GentooCount124 (36.0%)0 (0.0%)0 (0.0%)124 (36.0%)Mar. pct73.8% ; 100.0%0.0% ; 0.0%0.0% ; 0.0%TotalCount168 (48.8%)124 (36.0%)52 (15.1%)344 (100.0%) (1) Columns and rows percentages\n\n\nUne fois que l’on a un objet flextable, il est possible d’utiliser l’ensemble des fonctions disponibles pour ajouter ou supprimer des lignes et des colonnes, pour colorer ou mettre en gras le contenu des cellules, pour fusionner des cellules, etc.\n\n\nCode\nft &lt;- add_header_lines(ft, \"Size measurements for adult foraging penguins near Palmer Station, Antarctica\") %&gt;%\n  italic(part = \"header\", i = 1) %&gt;%\n  color(color = \"#0099FC\", part = \"footer\")\nft\n\n\nSize measurements for adult foraging penguins near Palmer Station, AntarcticaspeciesislandBiscoeDreamTorgersenTotalAdelieCount44 (12.8%)56 (16.3%)52 (15.1%)152 (44.2%)Mar. pct (1)26.2% ; 28.9%45.2% ; 36.8%100.0% ; 34.2%ChinstrapCount0 (0.0%)68 (19.8%)0 (0.0%)68 (19.8%)Mar. pct0.0% ; 0.0%54.8% ; 100.0%0.0% ; 0.0%GentooCount124 (36.0%)0 (0.0%)0 (0.0%)124 (36.0%)Mar. pct73.8% ; 100.0%0.0% ; 0.0%0.0% ; 0.0%TotalCount168 (48.8%)124 (36.0%)52 (15.1%)344 (100.0%) (1) Columns and rows percentages\n\n\n\n\n2.1.2 Sorties supportées\n\nHTML\nMicrosoft Word and RTF\nMicrosoft PowerPoint\nPDF\n‘grid graphics’\nExcel (https://github.com/pteridin/flexlsx)\n\nVous pouvez rapidement sauvegarder le résultat :\n\ndans un document Microsoft Word avec save_as_docx(),\ndans une présentation Microsoft PowerPoint avec save_as_pptx(),\ndans un PNG avec save_as_image() avec un support complet des polices.\n\n\n\nCode\nsave_as_docx(ft, path = \"assets/files/ft.docx\")\nsave_as_pptx(ft, path = \"assets/files/ft.pptx\")\nsave_as_image(ft, path = \"assets/files/ft.png\")\n\n\nVous pouvez utiliser également le R Markdown et Quarto, les tableaux seront automatiquement générés à l’impression.\nEn mode interactif, il est aussi possible d’appeler la fonction print() avec l’argument preview=\"docx\" ou preview=\"pdf\". Le tableau sera alors intégré à un document et ce dernier sera ouvert par le programme associé au format automatiquement.\n\n\nCode\nprint(ft, preview = \"docx\")\n\n\n\n\n2.1.3 Réaliser des tableaux homogènes\nLors de la création d’un tableau, des valeurs par défaut sont utilisées comme la famille de police, la taille de la police, le remplissage, l’alignement du texte… Ces propriétés sont utilisées lors de la création du tableau mobile et par les fonctions thème.\nIl est recommandé de ne les spécifier qu’une seule fois dans la session R afin d’obtenir des tableaux cohérents mais aussi afin d’éviter d’avoir à appeler de nombreuses fois les mêmes fonctions.\nElles peuvent être lues avec la fonction get_flextable_defaults() et , plus important, peuvent être mises à jour avec la fonction set_flextable_defaults().\n\n\nCode\nset_flextable_defaults(\n  font.color = \"#0099FC\",\n  border.color = \"red\",\n  theme_fun = \"theme_box\"\n)\n\ndat &lt;- data.frame(\n  wool = c(\"A\", \"B\"),\n  L = c(44.56, 28.22),\n  M = c(24, 28.77),\n  H = c(24.56, 18.78)\n)\nflextable(dat)\n\n\nwoolLMHA44.5624.0024.56B28.2228.7718.78\n\n\nLes valeurs définies précédemment sont un peu criardes, nous allons utiliser des valeurs plus raisonnables. Ce paramétrage n’est à faire qu’une seule fois dans votre session R.\n\n\nCode\nset_flextable_defaults(\n  font.size = 12, font.family = \"Open Sans\",\n  font.color = \"#333333\",\n  table.layout = \"fixed\",\n  border.color = \"gray\",\n  theme_fun = theme_booktabs,\n  padding.top = 3, padding.bottom = 3,\n  padding.left = 4, padding.right = 4\n)\n\n\n\n\nCode\nflextable(dat)\n\n\nwoolLMHA44.5624.0024.56B28.2228.7718.78",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction à flextable</span>"
    ]
  },
  {
    "objectID": "01-flextable-intro.html#la-largeur-des-colonnes",
    "href": "01-flextable-intro.html#la-largeur-des-colonnes",
    "title": "2  Introduction à flextable",
    "section": "2.2 La largeur des colonnes",
    "text": "2.2 La largeur des colonnes\nPar défaut, la largeur des colonnes d’un flextable est fixe, ce qui signifie que par défaut elles ont une largeur constante indépendamment du contenu. Dans de nombreuses situations, il sera préférable d’ajuster la largeur des colonnes en fonction du contenu réel. C’est là que la fonction autofit() entre en jeu.\nLa fonction autofit() permet de régler automatiquement la largeur des colonnes en fonction du contenu présent dans chaque colonne. En utilisant cette fonction, les colonnes du flextable s’ajusteront pour s’adapter au contenu le plus large de chaque colonne. Cela garantit que le tableau final est esthétiquement agréable et que toutes les données sont affichées correctement, sans troncature.\n\n\nCode\nflextable(dat) %&gt;% autofit()\n\n\nwoolLMHA44.5624.0024.56B28.2228.7718.78\n\n\nIl est aussi possible de définir un ajustement automatique géré par le moteur de document utilisé! C’est à dire qu’on laisse la responsabilité à Word, au navigateur Web ou au lecteur PDF de définir librement et au mieux la taille des colonnes pour optimiser l’affichage du tableau dans le document. Pour utliser cette option, il faut alors définir une propriété du tableau nommée layout='autofit' qui sera définie avec la fonction set_table_properties() :\n\n\nCode\nflextable(dat) %&gt;% set_table_properties(layout = \"autofit\")\n\n\nwoolLMHA44.5624.0024.56B28.2228.7718.78\n\n\nPar défaut, ce layout est défini à fixed, dans ce cas seulement, la fonction autofit() aura un effet. Dans le cas du layout défini à autofit, les tailles de colonnes ne seront pas inscrites dans la sortie (attention, la sortie PPTX ne supporte pas le layout ‘autofit’ mais seulement ‘fixed’).\nPar la suite, on utilisera le plus souvent autofit().",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction à flextable</span>"
    ]
  },
  {
    "objectID": "01-flextable-intro.html#formater-le-contenu",
    "href": "01-flextable-intro.html#formater-le-contenu",
    "title": "2  Introduction à flextable",
    "section": "2.3 Formater le contenu",
    "text": "2.3 Formater le contenu\nLe contenu peut être composé comme le résultat d’une concaténation de plusieurs morceaux, les morceaux pouvant même être des images ou des graphiques mais en général plutôt des textes.\nPar défaut, le contenu affiché de chaque cellule sera le résultat d’une simple mise en forme, la fonction format() est appelée pour ce simple affichage. L’objectif est de fournir à peu près le même affichage que dans votre console R.\n\n2.3.1 Les fonctions colformat\nToutefois, il est fréquent d’avoir besoin d’un affichage spécifique.\nA moins de créer des contenus composites, les fonctions colformat_*() suffiront. S’il s’agit d’une colonne de chaînes de caractères, elle restera telle quelle, s’il s’agit de nombres, elle sera transformée en une chaîne de caractères avec un nombre de décimales, s’il s’agit d’une date, elle sera transformée en une chaîne de caractères représentant une date, et ainsi de suite. Vous pouvez contrôler ces options avec les fonctions colformat_double(), colformat_int(), colformat_char(), colformat_date(), etc.\nLes paramètres principaux de ces fonctions peuvent être définis avec set_flextable_defaults(), c’est même encouragé afin de réduire le code et d’homogénéiser les sorties :\n\n\nCode\nset_flextable_defaults(decimal.mark = \",\", digits = 3, big.mark = \" \")\n\n\nOn vient de préciser que par défaut le séparateur des décimales est “,” et que le nombre de chiffres après la virgule doit être de 3.\n\n\nCode\nflextable(head(ggplot2::diamonds)) %&gt;%\n  colformat_double() %&gt;%\n  colformat_int(j = \"price\", suffix = \"$\") %&gt;%\n  autofit()\n\n\ncaratcutcolorclaritydepthtablepricexyz0,230IdealESI261,50055,000326$3,9503,9802,4300,210PremiumESI159,80061,000326$3,8903,8402,3100,230GoodEVS156,90065,000327$4,0504,0702,3100,290PremiumIVS262,40058,000334$4,2004,2302,6300,310GoodJSI263,30058,000335$4,3404,3502,7500,240Very GoodJVVS262,80057,000336$3,9403,9602,480\n\n\nIl est bien sûr toujours possible de préciser une autre valeur :\n\n\nCode\nflextable(head(cars)) %&gt;%\n  colformat_double(digits = 0) %&gt;%\n  autofit()\n\n\nspeeddist4241074722816910\n\n\n\n2.3.1.1 Les paramètres de colformat\nComme vous l’avez peut-être remarqué dans l’exemple d’avant, on peut utiliser la notion de préfixe. D’autres paramètres sont disponibles :\n\nprefix et suffix permettent de préciser un préfixe et ou un suffixe à utiliser.\nna_str permet de préciser quelle valeur afficher à la place des valeurs manquantes.\n\nPour les chiffres, en général, on peut préciser :\n\nbig.mark, le séparateur des milliers\ndecimal.mark, le séparateur décimal\ndigits, le nombre de chiffres après la virgule.\n\n\n\nCode\nft &lt;- flextable(head(airquality))\nft &lt;- colformat_int(\n  x = ft,\n  na_str = \"N/A\"\n)\nautofit(ft)\n\n\nOzoneSolar.RWindTempMonthDay411907,46751361188,072521214912,674531831311,56254N/AN/A14,3565528N/A14,96656\n\n\nIl n’est jamais nécessaire de changer ses données en chaînes de caractères pré-formattées, il est vivement recommandé d’utiliser plutôt ces paramètres. Ainsi, vous gardez la possibilité de faire du formattage conditionnel sur les valeurs numériques.\n\n\n\n2.3.2 Les tabulations et les retours chariot\nLorsque vous travaillez avec flextable, si une chaîne de caractères contient \\n elle sera traitée comme un retour à la ligne (et non comme un nouveau paragraphe !). Si une chaîne de caractères contient \\t, elle sera traitée comme une tabulation.\n\n\nCode\ndata.frame(\n  `co\\nco` = paste0(c(\"\\t\", \"\\t\\t\", \"\\t\\t\\t\"), 1:3),\n  check.names = FALSE\n) %&gt;% flextable()\n\n\ncoco 1  2   3\n\n\nNous ne recommandons pas de modifier vos données pour qu’elles contiennent \\n ou \\t. Nous recommandons plutôt d’utiliser mk_par(), prepend_chunks() ou append_chunks().\n\n\nCode\nadsl &lt;- dplyr::select(formatters::ex_adsl, AGE, SEX, COUNTRY, ARM)\n\nft &lt;- summarizor(adsl, by = \"ARM\") %&gt;%\n  as_flextable(\n    sep_w = 0, separate_with = \"variable\",\n    spread_first_col = TRUE\n  ) %&gt;%\n  align(i = ~ !is.na(variable), align = \"left\")\nft\n\n\nA: Drug X(N=134)B: Placebo(N=134)C: Combination(N=132)AGEMean (SD)33,769 (6,553)35,433 (7,895)35,432 (7,722)Median (IQR)33,000 (11,000)35,000 (10,000)35,000 (10,000)Range21,000 - 50,00021,000 - 62,00020,000 - 69,000SEXF79 (59,0%)77 (57,5%)66 (50,0%)M51 (38,1%)55 (41,0%)60 (45,5%)U3 (2,2%)2 (1,5%)4 (3,0%)UNDIFFERENTIATED1 (0,7%)0 (0,0%)2 (1,5%)COUNTRYCHN74 (55,2%)81 (60,4%)64 (48,5%)USA10 (7,5%)13 (9,7%)17 (12,9%)BRA13 (9,7%)7 (5,2%)10 (7,6%)PAK12 (9,0%)9 (6,7%)10 (7,6%)NGA8 (6,0%)7 (5,2%)11 (8,3%)RUS5 (3,7%)8 (6,0%)6 (4,5%)JPN5 (3,7%)4 (3,0%)9 (6,8%)GBR4 (3,0%)3 (2,2%)2 (1,5%)CAN3 (2,2%)2 (1,5%)3 (2,3%)CHE0 (0,0%)0 (0,0%)0 (0,0%)\n\n\nPar exemple, voici comment utiliser prepend_chunks() pour ajouter une tabulation devant les valeurs où variable est manquante et donc qui représente une sous-catégorie.\n\n\nCode\nprepend_chunks(ft, i = ~ is.na(variable), j = \"stat\", as_chunk(\"\\t\"))\n\n\nA: Drug X(N=134)B: Placebo(N=134)C: Combination(N=132)AGE Mean (SD)33,769 (6,553)35,433 (7,895)35,432 (7,722) Median (IQR)33,000 (11,000)35,000 (10,000)35,000 (10,000) Range21,000 - 50,00021,000 - 62,00020,000 - 69,000SEX F79 (59,0%)77 (57,5%)66 (50,0%) M51 (38,1%)55 (41,0%)60 (45,5%) U3 (2,2%)2 (1,5%)4 (3,0%) UNDIFFERENTIATED1 (0,7%)0 (0,0%)2 (1,5%)COUNTRY CHN74 (55,2%)81 (60,4%)64 (48,5%) USA10 (7,5%)13 (9,7%)17 (12,9%) BRA13 (9,7%)7 (5,2%)10 (7,6%) PAK12 (9,0%)9 (6,7%)10 (7,6%) NGA8 (6,0%)7 (5,2%)11 (8,3%) RUS5 (3,7%)8 (6,0%)6 (4,5%) JPN5 (3,7%)4 (3,0%)9 (6,8%) GBR4 (3,0%)3 (2,2%)2 (1,5%) CAN3 (2,2%)2 (1,5%)3 (2,3%) CHE0 (0,0%)0 (0,0%)0 (0,0%)\n\n\n\n\n2.3.3 Remplacement des textes affichés\nLa fonction labelizor() vont vous permettre de remplacer les valeurs affichées d’un tableau mobile par d’autres textes. Vous pouvez soit utiliser des textes associés au nom qui correspond aux occurences à remplacer, soit utiliser une fonction.\nIllustrons ces deux options avec un tableau représentant une agrégation. Partons d’un tableau d’agrégation simple :\n\n\nCode\nlibrary(palmerpenguins)\n\ndat &lt;- penguins %&gt;%\n  select(species, island, ends_with(\"mm\")) %&gt;%\n  group_by(species, island) %&gt;%\n  summarise(\n    across(\n      where(is.numeric),\n      .fns = list(\n        avg = ~ mean(.x, na.rm = TRUE),\n        sd = ~ sd(.x, na.rm = TRUE)\n      )\n    ),\n    .groups = \"drop\"\n  ) %&gt;%\n  rename_with(~ tolower(gsub(\"_mm_\", \"_\", .x, fixed = TRUE)))\n\nft_pen &lt;- flextable(dat) %&gt;%\n  colformat_double() %&gt;%\n  separate_header() %&gt;%\n  theme_vanilla() %&gt;%\n  align(align = \"center\", part = \"all\") %&gt;%\n  valign(valign = \"center\", part = \"header\") %&gt;%\n  autofit()\nft_pen\n\n\nspeciesislandbillflipperlengthdepthlengthavgsdavgsdavgsdAdelieBiscoe38,9752,48118,3701,189188,7956,729AdelieDream38,5022,46518,2521,134189,7326,585AdelieTorgersen38,9513,02518,4291,339191,1966,232ChinstrapDream48,8343,33918,4211,135195,8247,132GentooBiscoe47,5053,08214,9820,981217,1876,485\n\n\nRemplaçons d’abord les noms des colonnes “avg” et “sd” par les mots “Mean” et “Standard Deviation”.\n\n\nCode\nft_pen &lt;- labelizor(\n  x = ft_pen,\n  part = \"header\",\n  labels = c(\"avg\" = \"Mean\", \"sd\" = \"Standard Deviation\")\n)\nft_pen\n\n\nspeciesislandbillflipperlengthdepthlengthMeanStandard DeviationMeanStandard DeviationMeanStandard DeviationAdelieBiscoe38,9752,48118,3701,189188,7956,729AdelieDream38,5022,46518,2521,134189,7326,585AdelieTorgersen38,9513,02518,4291,339191,1966,232ChinstrapDream48,8343,33918,4211,135195,8247,132GentooBiscoe47,5053,08214,9820,981217,1876,485\n\n\nEt maintenant, formatons les en-têtes avec une lettre en majuscule pour la première lettre et les autres lettres en minuscule :\n\n\nCode\nft_pen &lt;- labelizor(\n  x = ft_pen,\n  part = \"header\",\n  labels = stringr::str_to_title\n)\nft_pen\n\n\nSpeciesIslandBillFlipperLengthDepthLengthMeanStandard DeviationMeanStandard DeviationMeanStandard DeviationAdelieBiscoe38,9752,48118,3701,189188,7956,729AdelieDream38,5022,46518,2521,134189,7326,585AdelieTorgersen38,9513,02518,4291,339191,1966,232ChinstrapDream48,8343,33918,4211,135195,8247,132GentooBiscoe47,5053,08214,9820,981217,1876,485",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction à flextable</span>"
    ]
  },
  {
    "objectID": "01-flextable-intro.html#les-caractéristiques-visuelles",
    "href": "01-flextable-intro.html#les-caractéristiques-visuelles",
    "title": "2  Introduction à flextable",
    "section": "2.4 Les caractéristiques visuelles",
    "text": "2.4 Les caractéristiques visuelles\n\n\nCode\ndat &lt;- data.frame(\n  wool = c(\"A\", \"B\"),\n  L = c(44.56, 28.22),\n  M = c(24, 28.77),\n  H = c(24.56, 18.78)\n)\n\n\n\n2.4.1 Les fonctions de formattage visuel\nIl existe des fonctions simples pour modifier une propriété de formatage :\n\nLe texte peut être formaté avec les fonctions bold(), italic(), color(), fontsize(), font(), highlight()\n\n\n\nCode\nflextable(dat) %&gt;%\n  fontsize(i = ~ wool %in% \"A\", size = 10) %&gt;%\n  font(part = \"all\", fontname = \"Inconsolata\") %&gt;%\n  color(part = \"header\", color = \"#e22323\", j = c(\"L\", \"M\", \"H\")) %&gt;%\n  bold(part = \"header\", j = c(\"L\", \"M\")) %&gt;%\n  italic(part = \"all\", j = \"wool\") %&gt;%\n  highlight(i = ~ L &lt; 30, color = \"wheat\", j = c(\"M\", \"H\"))\n\n\nwoolLMHA44,5624,0024,56B28,2228,7718,78\n\n\n\nLes paragraphes avec les fonctions line_spacing(), padding() et align(),\n\n\n\nCode\nft &lt;- flextable(dat) %&gt;%\n  align(align = \"center\", part = \"all\") %&gt;%\n  line_spacing(space = 2, part = \"all\") %&gt;%\n  padding(padding = 6, part = \"header\")\nft\n\n\nwoolLMHA44,5624,0024,56B28,2228,7718,78\n\n\n\nLes cellules avec les fonctions bg(), valign() et hrule().\n\n\n\nCode\nft %&gt;%\n  bg(bg = \"black\", part = \"all\") %&gt;%\n  color(color = \"white\", part = \"all\") %&gt;%\n  merge_at(i = 1:2, j = 1) %&gt;%\n  valign(i = 1, valign = \"bottom\")\n\n\nwoolLMHA44,5624,0024,5628,2228,7718,78\n\n\nLes couleurs d’arrière-plan, les couleurs de police et les couleurs de surbrillance peuvent être modifiées avec un vecteur ou avec une fonction qui renvoie un vecteur de caractères de couleurs (comme avec ‘ggplot2’ - voir scales::col_numeric).\n\n\nCode\nmyft &lt;- as.data.frame(matrix(runif(5 * 5), ncol = 5)) %&gt;%\n  flextable() %&gt;%\n  colformat_double() %&gt;%\n  autofit() %&gt;%\n  align(align = \"center\", part = \"all\") %&gt;%\n  bg(bg = \"black\", part = \"header\") %&gt;%\n  color(color = \"white\", part = \"all\") %&gt;%\n  bg(bg = scales::col_numeric(palette = \"viridis\", domain = c(0, 1)))\nmyft\n\n\nV1V2V3V4V50,6230,4020,0430,7400,6030,7650,8910,9460,5360,2430,9860,4350,7700,9040,8290,2110,5310,0530,2610,4460,7170,4990,8790,5020,729\n\n\nLa rotation du texte des cellules est une autre option qui peut être utilisée - il est recommandé de l’utiliser avec hrule(rule = \"exact\") lorsque la sortie est Word ou PowerPoint.\n\n\nCode\nmyft &lt;- myft %&gt;%\n  rotate(rotation = \"tbrl\", part = \"header\", align = \"center\") %&gt;%\n  height(height = 1, unit = \"cm\", part = \"header\") %&gt;%\n  hrule(rule = \"exact\", part = \"header\") %&gt;%\n  align(align = \"right\", part = \"header\")\nmyft\n\n\nV1V2V3V4V50,6230,4020,0430,7400,6030,7650,8910,9460,5360,2430,9860,4350,7700,9040,8290,2110,5310,0530,2610,4460,7170,4990,8790,5020,729\n\n\n\n\n2.4.2 Bordures\n\n2.4.2.1 Bordures intérieures et extérieures\nSi aucune mise en forme conditionnelle n’est nécessaire, utilisez border_outer(), border_inner_h() et border_inner_v(). Ce sont les fonctions les plus simples et elles satisfont la plupart des cas d’utilisation.\n\n\nCode\nlibrary(officer)\nbig_border &lt;- fp_border(color = \"red\", width = 2)\nsmall_border &lt;- fp_border(color = \"gray\", width = 1)\n\nmyft &lt;- flextable(head(airquality))\nmyft &lt;- border_remove(x = myft)\nmyft &lt;- border_outer(myft, part = \"all\", border = big_border)\nmyft &lt;- border_inner_h(myft, part = \"all\", border = small_border)\nmyft &lt;- border_inner_v(myft, part = \"all\", border = small_border)\nmyft\n\n\nOzoneSolar.RWindTempMonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656\n\n\n\n\n2.4.2.2 Ajouter des lignes\nLorsqu’une plus grande maîtrise de la mise en forme des bordures est nécessaire, les fonctions suivantes peuvent être utilisées pour ajouter des lignes verticales ou horizontales comme bordures :\n\nhline(): définir les bordures inférieures (horizontales intérieures)\nvline(): définir les bordures droites (verticales intérieures)\nhline_top(): définir la bordure supérieure (horizontale extérieure)\nhline_bottom(): définir la bordure inférieure (horizontale extérieure)\nvline_left(): définir la bordure gauche (verticale extérieure)\nvline_right(): définir la bordure droite (verticale extérieure)\n\n\n\nCode\nmyft2 &lt;- border_remove(myft)\n\nmyft2 &lt;- vline(myft2, border = small_border, part = \"all\")\nmyft2 &lt;- vline_left(myft2, border = big_border, part = \"all\")\nmyft2 &lt;- vline_right(myft2, border = big_border, part = \"all\")\nmyft2 &lt;- hline(myft2, border = small_border)\nmyft2 &lt;- hline_bottom(myft2, border = big_border)\nmyft2 &lt;- hline_top(myft2, border = big_border, part = \"all\")\nmyft2\n\n\nOzoneSolar.RWindTempMonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656\n\n\nCes fonctions prennent également en charge les sélecteurs de lignes i et de colonnes j.\n\n\n\n2.4.3 Fonctions de thème\nLes fonctions de thème ne sont pas comme les thèmes ‘ggplot2’. Elles sont appliquées à la table existante immédiatement. Les fonctions de thème doivent être appliquées après l’ajout de tous les éléments de la table.\nSi vous souhaitez appliquer automatiquement une fonction de thème à chaque flextable, vous pouvez utiliser l’argument theme_fun de set_flextable_defaults() ; soyez conscient que cette fonction de thème est appliquée en tant que dernière instruction lors de l’appel de flextable() - donc si vous ajoutez des en-têtes ou des pieds de page au tableau, ils ne seront pas formatés avec le thème.\nVous pouvez également utiliser l’argument post_process_html de set_flextable_defaults() (ou post_process_pdf, post_process_docx, post_process_pptx) pour spécifier un thème à appliquer systématiquement avant l’impression de flextable(). Assurer vous bien que votre thème ne remplace pas la mise en forme effectuée avant l’instruction d’impression.\n\n2.4.3.1 Thèmes disponibles\n\n\nCode\nft &lt;- flextable(head(airquality))\nft &lt;- add_header_row(ft,\n  top = TRUE,\n  values = c(\"mesures\", \"temps\"),\n  colwidths = c(4, 2)\n)\nft &lt;- align(ft, i = 1, align = \"center\", part = \"header\")\nft &lt;- width(ft, width = .75)\n\n\n\ntheme_booktabs() est le thème par défaut. Il ajoute des bordures, aligne le texte à gauche dans les colonnes de texte et aligne à droite dans les colonnes non textuelles.\n\n\n\nCode\ntheme_booktabs(ft)\n\n\nmesurestempsOzoneSolar.RWindTempMonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656\n\n\n\ntheme_alafoli() offre un aspect gris clair :\n\n\n\nCode\ntheme_alafoli(ft)\n\n\nmesurestempsOzoneSolar.RWindTempMonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656\n\n\n\ntheme_vader() offre un aspect sombre :\n\n\n\nCode\ntheme_vader(ft)\n\n\nmesurestempsOzoneSolar.RWindTempMonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656\n\n\n\ntheme_box() n’est pas joli mais utile lors de la création d’un tableau si vous voulez vous assurer que la mise en page que vous définissez est exactement comme prévu :\n\n\n\nCode\ntheme_box(ft)\n\n\nmesurestempsOzoneSolar.RWindTempMonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656\n\n\n\ntheme_vanilla() ressemble à theme_booktabs() mais comporte des lignes horizontales fines séparant les lignes :\n\n\n\nCode\ntheme_vanilla(ft)\n\n\nmesurestempsOzoneSolar.RWindTempMonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656\n\n\n\ntheme_zebra() vous permet de créer des tableaux zébrés\ntheme_tron_legacy() et theme_tron() sont des thèmes sombres.\n\n\n\n2.4.3.2 Définir votre propre thème\nVous pouvez facilement définir votre propre thème en créant une fonction.\n\n\nCode\nmon_theme &lt;- function(x, ...) {\n  x &lt;- colformat_double(x, big.mark = \"'\", decimal.mark = \",\", digits = 1)\n  x &lt;- set_table_properties(x, layout = \"fixed\")\n  x &lt;- border_remove(x)\n  std_border &lt;- fp_border(width = 1, color = \"orange\")\n  x &lt;- border_outer(x, part = \"all\", border = std_border)\n  x &lt;- border_inner_h(x, border = std_border, part = \"all\")\n  x &lt;- border_inner_v(x, border = std_border, part = \"all\")\n  autofit(x)\n}\nmon_theme(ft)\n\n\nmesurestempsOzoneSolar.RWindTempMonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction à flextable</span>"
    ]
  },
  {
    "objectID": "01-flextable-intro.html#les-en-têtes-et-pieds-de-tableau",
    "href": "01-flextable-intro.html#les-en-têtes-et-pieds-de-tableau",
    "title": "2  Introduction à flextable",
    "section": "2.5 Les en-têtes et pieds de tableau",
    "text": "2.5 Les en-têtes et pieds de tableau\nLes en-têtes, les pieds (et le corps) du tableau peuvent être complétés par des lignes et les valeurs affichées peuvent être modifiées.\n\n2.5.1 Séparer les noms de colonnes en plusieurs lignes\nQuand les noms des colonnes contiennent plusieurs labels (résultant d’une concaténation par exemple), il est possible de les répartir et organiser sur plusieurs lignes très simplement en utilisant la fonction separate_header().\n\n\nCode\nft &lt;- flextable(head(iris))\nseparate_header(ft)\n\n\nSepalPetalSpeciesLengthWidthLengthWidth5,13,51,40,2setosa4,93,01,40,2setosa4,73,21,30,2setosa4,63,11,50,2setosa5,03,61,40,2setosa5,43,91,70,4setosa\n\n\nC’est particulièrement utile pour présenter des agrégations réalisées avec la fonction dplyr::summarise().\n\n\nCode\nlibrary(palmerpenguins)\n\ndat &lt;- penguins %&gt;%\n  select(species, island, ends_with(\"mm\")) %&gt;%\n  group_by(species, island) %&gt;%\n  summarise(\n    across(\n      where(is.numeric),\n      .fns = list(\n        avg = ~ mean(.x, na.rm = TRUE),\n        sd = ~ sd(.x, na.rm = TRUE)\n      )\n    ),\n    .groups = \"drop\"\n  )\ndat\n\n\nspeciesislandbill_length_mm_avgbill_length_mm_sdbill_depth_mm_avgbill_depth_mm_sdflipper_length_mm_avgflipper_length_mm_sdfactorfactornumericnumericnumericnumericnumericnumericAdelieBiscoe38,9752,48118,3701,189188,7956,729AdelieDream38,5022,46518,2521,134189,7326,585AdelieTorgersen38,9513,02518,4291,339191,1966,232ChinstrapDream48,8343,33918,4211,135195,8247,132GentooBiscoe47,5053,08214,9820,981217,1876,485n: 5\n\n\nCode\n\nft_pen &lt;- flextable(dat) %&gt;%\n  separate_header() %&gt;%\n  align(align = \"center\", part = \"all\") %&gt;%\n  theme_box() %&gt;%\n  colformat_double(digits = 2) %&gt;%\n  autofit()\nft_pen\n\n\nspeciesislandbillflipperlengthdepthlengthmmavgsdavgsdavgsdAdelieBiscoe38,982,4818,371,19188,806,73AdelieDream38,502,4718,251,13189,736,59AdelieTorgersen38,953,0318,431,34191,206,23ChinstrapDream48,833,3418,421,14195,827,13GentooBiscoe47,503,0814,980,98217,196,48\n\n\n\n\n2.5.2 Modifier les libellés d’en-tête\nUtilisez set_header_labels() pour remplacer les étiquettes de la ligne inférieure de l’en-tête. Lorsque le tableau est créé, leurs valeurs sont les noms des colonnes du data.frame.\n\n\nCode\nft &lt;- flextable(head(airquality))\nft &lt;- set_header_labels(ft,\n  Solar.R = \"Solar R (lang)\",\n  Temp = \"Temperature (degrees F)\", Wind = \"Wind (mph)\",\n  Ozone = \"Ozone (ppb)\"\n)\nft &lt;- set_table_properties(ft, layout = \"autofit\", width = .8)\nft\n\n\nOzone (ppb)Solar R (lang)Wind (mph)Temperature (degrees F)MonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656\n\n\n\n\n2.5.3 Ajouter des lignes dans l’en-tête ou le pied du tableau\nDe nouvelles lignes d’en-tête peuvent être ajoutées en haut ou en bas de l’en-tête.\nLes fonctions nommées ci-dessous doivent être utilisées pour ajouter une ligne d’en-tête (ou de pied de page) :\n\nLa plupart des besoins seront satisfaits par les fonctions add_header_row() et add_footer_row(). Il s’agit de fonctions qui vous permettent d’ajouter une seule ligne d’étiquettes (qui peuvent être affichées le long d’une ou de plusieurs colonnes dans la nouvelle ligne).\nLes fonctions add_header() et add_footer() sont des fonctions qui vous permettent d’ajouter plusieurs valeurs (une pour chaque nouvelle ligne) pour une colonne donnée.\nLes fonctions add_footer_lines() et add_header_lines() sont des fonctions qui ajoutent des étiquettes sur une ligne où toutes les colonnes sont fusionnées.\n\nNous allons principalement démontrer les en-têtes mais la même chose peut être appliquée aux pieds de page.\n\n2.5.3.1 Ajouter une ligne d’en-tête\nUtilisez la fonction add_header_row() : ajoutez une ligne d’en-tête où des libellés sont associés à un nombre de colonnes à fusionner.\n\n\nCode\nft &lt;- add_header_row(\n  x = ft, values = c(\"mesures de la qualité de l'air\", \"temps\"),\n  colwidths = c(4, 2)\n)\nft &lt;- theme_box(ft)\nft\n\n\nmesures de la qualité de l'airtempsOzone (ppb)Solar R (lang)Wind (mph)Temperature (degrees F)MonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656\n\n\n\n\n2.5.3.2 Ajouter des lignes de texte\nUtilisez la fonction add_header_lines() : ajoutez des libellés dans de nouvelles lignes d’en-tête (toutes les colonnes sont fusionnées).\n\n\nCode\nft &lt;- add_header_lines(ft,\n  values = c(\n    \"c'est une première ligne\",\n    \"c'est une deuxième ligne\"\n  )\n)\ntheme_box(ft)\n\n\nc'est une première lignec'est une deuxième lignemesures de la qualité de l'airtempsOzone (ppb)Solar R (lang)Wind (mph)Temperature (degrees F)MonthDay411907,46751361188,072521214912,674531831311,5625414,356552814,96656",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction à flextable</span>"
    ]
  },
  {
    "objectID": "02-as-flextable.html",
    "href": "02-as-flextable.html",
    "title": "3  La fonction as flextable",
    "section": "",
    "text": "3.1 Récupérer un flextable depuis un modèle R\nLes modèles usuels, tels que les modèles mixtes, les modèles GAM, les modèles linéaires généralisés mais aussi les tests et certaines classifications peuvent être transformés en flextable avec la fonction as_flextable().",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>La fonction as flextable</span>"
    ]
  },
  {
    "objectID": "02-as-flextable.html#récupérer-un-flextable-depuis-un-modèle-r",
    "href": "02-as-flextable.html#récupérer-un-flextable-depuis-un-modèle-r",
    "title": "3  La fonction as flextable",
    "section": "",
    "text": "3.1.1 GLM\n\n\nCode\nclotting &lt;- data.frame(\n    u = c(5,10,15,20,30,40,60,80,100),\n    lot1 = c(118,58,42,35,27,25,21,19,18),\n    lot2 = c(69,35,26,21,18,16,13,12,12))\nas_flextable(glm(lot1 ~ log(u), data = clotting, family = Gamma))\n\n\nEstimateStandard Errorz valuePr(&gt;|z|)(Intercept)-0.0170.001-17.8470.0000***log(u)0.0150.00036.9750.0000***Signif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05 (Dispersion parameter for Gamma family taken to be 0.002446059)Null deviance: 3.513 on 8 degrees of freedomResidual deviance: 0.01673 on 7 degrees of freedom\n\n\n\n\n3.1.2 LM\n\n\nCode\nctl &lt;- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)\ntrt &lt;- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)\ngroup &lt;- gl(2, 10, 20, labels = c(\"Ctl\",\"Trt\"))\nweight &lt;- c(ctl, trt)\nlm(weight ~ group) %&gt;% as_flextable()\n\n\nEstimateStandard Errort valuePr(&gt;|t|)(Intercept)5.0320.22022.8500.0000***groupTrt-0.3710.311-1.1910.2490   Signif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05Residual standard error: 0.6964 on 18 degrees of freedomMultiple R-squared: 0.07308, Adjusted R-squared: 0.02158F-statistic: 1.419 on 18 and 1 DF, p-value: 0.2490\n\n\n\n\n3.1.3 GAM\n\n\nCode\nlibrary(mgcv)\nset.seed(2)\n\ndat &lt;- gamSim(1, n = 400, \n  dist = \"normal\", scale = 2, verbose = FALSE)\nb &lt;- gam(y ~ s(x0) + s(x1) + s(x2) + s(x3), \n  data = dat)\n\nft &lt;- as_flextable(b)\nft\n\n\nComponentTermEstimateStd Errort-valuep-valueA. parametric coefficients(Intercept)7.8330.09979.3030.0000***ComponentTermedfRef. dfF-valuep-valueB. smooth termss(x0)2.5003.1156.9210.0001***s(x1)2.4012.98481.8580.0000***s(x2)7.6988.56488.1580.0000***s(x3)1.0001.0004.3430.0378  *Signif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05Adjusted R-squared: 0.715, Deviance explained 0.725GCV : 4.051, Scale est: 3.903, N: 400\n\n\n\n\n3.1.4 Test d’hypothèse\n\n\nCode\nx &lt;- rnorm(50)\ny &lt;- runif(30)\nks.test(x, y) %&gt;% as_flextable()\n\n\nstatisticp.valuemethodalternative0.60.0000***Exact two-sample Kolmogorov-Smirnov testtwo-sidedSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05\n\n\n\n\n3.1.5 kmeans\n\n\nCode\ncl &lt;- kmeans(scale(mtcars[1:7]), 5)\nft &lt;- as_flextable(cl)\nft\n\n\nvariable12345withinss2.15.033.44.19.6size351455mpg*2.01470.9108-0.8281-0.05820.2571cyl*-1.2249-1.22491.0149-0.1050-0.7769disp*-1.2551-1.01700.9874-0.5703-0.4244hp*-1.2498-0.76260.9120-0.2696-0.7714drat*1.52140.8443-0.68690.4777-0.3115wt*-1.3633-1.10340.7992-0.1924-0.1239qsec*0.81030.0522-0.6025-0.34291.4915(*) CentersTotal sum of squares: 217.0Total within-cluster sum of squares: 54.2Total between-cluster sum of squares: 162.8BSS/TSS ratio: 75.0%Number of iterations: 3\n\n\n\n\n3.1.6 pam\n\n\nCode\nlibrary(cluster)\ndat &lt;- as.data.frame(scale(mtcars[1:7]))\ncl &lt;- pam(dat, 3)\nft &lt;- as_flextable(cl)\nft\n\n\nvariable123size61115max.diss2.22.83.2avg.diss1.11.41.6diameter2.84.05.1separation1.01.51.0avg.width0.40.20.3mpg*0.15091.1962-0.6124cyl*-0.1050-1.22491.0149disp*-0.5706-1.22420.3637hp*-0.5351-1.17680.4859drat*0.56750.9042-0.9848wt*-0.3498-1.31050.8715qsec*-0.46380.5883-0.2511(*) CentersThe average silhouette width is 0.2959",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>La fonction as flextable</span>"
    ]
  },
  {
    "objectID": "02-as-flextable.html#résumé-simple",
    "href": "02-as-flextable.html#résumé-simple",
    "title": "3  La fonction as flextable",
    "section": "3.2 Résumé simple",
    "text": "3.2 Résumé simple\nL’utilisation de la fonction summarizor() suivi de as_flextable() est un moyen simple de produire des tableaux de résumé qui présentent les statistiques univariées de chaque colonne.\nUne option permet d’ajouter une catégorie “global” à la fin du tableau produit.\n\n\nCode\nlibrary(dplyr)\nlibrary(flextable)\nz &lt;- palmerpenguins::penguins %&gt;% \n  select(-contains(\"length\")) %&gt;% \n  summarizor(\n    by = \"species\",\n    overall_label = \"Overall\")\n\nft &lt;- as_flextable(z, spread_first_col = TRUE) %&gt;% \n  style(i = ~!is.na(variable), pr_t = fp_text_default(bold = TRUE),\n        pr_p = officer::fp_par(text.align = \"left\", padding = 5, line_spacing = 1.5)) %&gt;% \n  prepend_chunks(i = ~is.na(variable), j = 1, as_chunk(\"\\t\")) %&gt;% \n  autofit(add_w = .01)\nft\n\n\nAdelie(N=152)Chinstrap(N=68)Gentoo(N=124)Overall(N=344)island Biscoe44 (28.9%)0 (0.0%)124 (100.0%)168 (48.8%) Dream56 (36.8%)68 (100.0%)0 (0.0%)124 (36.0%) Torgersen52 (34.2%)0 (0.0%)0 (0.0%)52 (15.1%)bill_depth_mm Mean (SD)18.3 (1.2)18.4 (1.1)15.0 (1.0)17.2 (2.0) Median (IQR)18.4 (1.5)18.4 (1.9)15.0 (1.5)17.3 (3.1) Range15.5 - 21.516.4 - 20.813.1 - 17.313.1 - 21.5 Missing1 (0.7%)1 (0.8%)2 (0.6%)body_mass_g Mean (SD)3,700.7 (458.6)3,733.1 (384.3)5,076.0 (504.1)4,201.8 (802.0) Median (IQR)3,700.0 (650.0)3,700.0 (462.5)5,000.0 (800.0)4,050.0 (1,200.0) Range2,850.0 - 4,775.02,700.0 - 4,800.03,950.0 - 6,300.02,700.0 - 6,300.0 Missing1 (0.7%)1 (0.8%)2 (0.6%)sex female73 (48.0%)34 (50.0%)58 (46.8%)165 (48.0%) male73 (48.0%)34 (50.0%)61 (49.2%)168 (48.8%) Missing6 (3.9%)5 (4.0%)11 (3.2%)year Mean (SD)2,008.0 (0.8)2,008.0 (0.9)2,008.1 (0.8)2,008.0 (0.8) Median (IQR)2,008.0 (2.0)2,008.0 (2.0)2,008.0 (2.0)2,008.0 (2.0) Range2,007.0 - 2,009.02,007.0 - 2,009.02,007.0 - 2,009.02,007.0 - 2,009.0",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>La fonction as flextable</span>"
    ]
  },
  {
    "objectID": "03-flextable-exo.html",
    "href": "03-flextable-exo.html",
    "title": "4  Pratique simple de flextable",
    "section": "",
    "text": "4.1 Tableau des cancers en 2021\nOn va travailler sur un jeu de données présenté sur le site https://data.ameli.fr/pages/data-pathologies/. Le jeu présente quelques statistiques sur le cancer en 2021.\nOn vous demande de construire de façon itérative un tableau présentant simplement les données tout en suivant quelques règles de formatage.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Pratique simple de flextable</span>"
    ]
  },
  {
    "objectID": "03-flextable-exo.html#tableau-des-cancers-en-2021",
    "href": "03-flextable-exo.html#tableau-des-cancers-en-2021",
    "title": "4  Pratique simple de flextable",
    "section": "",
    "text": "4.1.1 Importation des données\nImportez les données contenues dans le fichier data/cancers-2021.parquet. Triez les selon les valeurs de la colonne effectif par ordre descendant.\n\n\nCode\nlibrary(dplyr)\ncancers &lt;- arrow::read_parquet(\"data/cancers-2021.parquet\") %&gt;% \n  arrange(desc(effectif))\ncancers\n\n\nnamenpopprevalenceeffectifcharacterintegernumericnumericAutres cancers68,713,0802.71,822,958.0Cancer du sein de la femme35,356,4402.1735,767.5Cancer de la prostate33,356,6401.6549,717.4Cancer colorectal68,713,0800.5375,173.4Cancer du poumon68,713,0800.2161,475.7n: 5\n\n\n\n\n4.1.2 Paramètres globaux\nUtilisez la fonction set_flextable_defaults() et définissez :\n\n“Arial” comme la police de caractères par defaut,\nles séparateurs de milliers doivent être représentés par un blanc (” “),\nle séparateur de décimale doit être le caractère “,”.\n\n\n\nCode\nset_flextable_defaults(\n  font.family = \"Arial\",\n  big.mark = \" \",\n  decimal.mark = \",\",\n  post_process_all = function(z) {\n    autofit(z)\n  }\n)\n\n\nVous pouvez tester le rendu avec l’appel suivant :\n\n\nCode\nflextable(cancers)\n\n\nnamenpopprevalenceeffectifAutres cancers68 713 0802,6531 822 958,0Cancer du sein de la femme35 356 4402,081735 767,5Cancer de la prostate33 356 6401,648549 717,4Cancer colorectal68 713 0800,546375 173,4Cancer du poumon68 713 0800,235161 475,7\n\n\n\n\n4.1.3 Choisir les colonnes affichées\nImprimez les colonnes c(\"name\", \"prevalence\", \"effectif\") en utilisant l’argument col_keys de la fonction flextable.\n\n\nCode\nft &lt;- flextable(cancers, col_keys = c(\"name\", \"prevalence\", \"effectif\"))\nft\n\n\nnameprevalenceeffectifAutres cancers2,6531 822 958,0Cancer du sein de la femme2,081735 767,5Cancer de la prostate1,648549 717,4Cancer colorectal0,546375 173,4Cancer du poumon0,235161 475,7\n\n\n\n\n4.1.4 Formatez les contenus\n\nLa colonne effectif doit ne comporter aucun chiffre après la virgule.\nLa colonne prevalence doit comporter deux chiffres après la virgule et doit terminer par ” %“.\n\n\n\nCode\nft &lt;- ft %&gt;% \n  colformat_double(digits = 0, j = \"effectif\") %&gt;% \n  colformat_double(digits = 2, j = \"prevalence\", suffix = \" %\")\nft\n\n\nnameprevalenceeffectifAutres cancers2,65 %1 822 958Cancer du sein de la femme2,08 %735 768Cancer de la prostate1,65 %549 717Cancer colorectal0,55 %375 173Cancer du poumon0,23 %161 476\n\n\n\n\n4.1.5 Gérer l’entête\n\nLes colonnes prevalence et effectif doivent avoir comme label “Prévalence” et “Nombre de cas”.\nLes noms de colonnes doivent être précédés des annotations c(\"Cancers\", \"Effectif | en France | tous âges | tous sexes | 2021\").\nLe bas du tableau doit présenter l’information suivante : “Les effectifs comptabilisent le nombre de patients pris en charge pour chacune des pathologies (ou traitements chroniques ou épisodes de soins) du groupe.”.\n\n\n\nCode\nft &lt;- ft %&gt;% \n  set_header_labels(name = \"\", prevalence = \"Prévalence\", effectif = \"Nombre de cas\") %&gt;% \n  add_header_lines(c(\"Cancers\", \"Effectif | en France | tous âges | tous sexes | 2021\"),\n                   top = TRUE) %&gt;% \n  add_footer_lines(\"Les effectifs comptabilisent le nombre de patients pris en charge pour chacune des pathologies (ou traitements chroniques ou épisodes de soins) du groupe.\")\nft\n\n\nCancersEffectif | en France | tous âges | tous sexes | 2021PrévalenceNombre de casAutres cancers2,65 %1 822 958Cancer du sein de la femme2,08 %735 768Cancer de la prostate1,65 %549 717Cancer colorectal0,55 %375 173Cancer du poumon0,23 %161 476Les effectifs comptabilisent le nombre de patients pris en charge pour chacune des pathologies (ou traitements chroniques ou épisodes de soins) du groupe.\n\n\n\n\n4.1.6 Finaliser la mise en forme\n\nUtilisez le thème theme_vanilla(),\nla ligne du pied du tableau doit être en italique (utilisez italic()),\ndemensionnez automatiquement les largeurs de colonnes pour les ajuster au contenu avec la fonction autofit().\n\n\n\nCode\nft &lt;- ft %&gt;% \n  theme_vanilla() %&gt;% \n  italic(italic = TRUE, part = \"footer\") %&gt;% \n  autofit()\nft\n\n\nCancersEffectif | en France | tous âges | tous sexes | 2021PrévalenceNombre de casAutres cancers2,65 %1 822 958Cancer du sein de la femme2,08 %735 768Cancer de la prostate1,65 %549 717Cancer colorectal0,55 %375 173Cancer du poumon0,23 %161 476Les effectifs comptabilisent le nombre de patients pris en charge pour chacune des pathologies (ou traitements chroniques ou épisodes de soins) du groupe.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Pratique simple de flextable</span>"
    ]
  },
  {
    "objectID": "03-flextable-exo.html#modèle-probit",
    "href": "03-flextable-exo.html#modèle-probit",
    "title": "4  Pratique simple de flextable",
    "section": "4.2 Modèle probit",
    "text": "4.2 Modèle probit\nRéutilisez le code suivant pour obtenir le modèle à manipuler.\n\n\nCode\ndat &lt;- attitude\ndat$high.rating &lt;- (dat$rating &gt; 70)\nprobit.model &lt;- glm(high.rating ~ learning + critical +\n                      advance, data = dat, family = binomial(link = \"probit\"))\nprint(probit.model)\n## \n## Call:  glm(formula = high.rating ~ learning + critical + advance, family = binomial(link = \"probit\"), \n##     data = dat)\n## \n## Coefficients:\n## (Intercept)     learning     critical      advance  \n##  -7.4763927    0.1643745   -0.0005717   -0.0618792  \n## \n## Degrees of Freedom: 29 Total (i.e. Null);  26 Residual\n## Null Deviance:       38.19 \n## Residual Deviance: 18.17     AIC: 26.17\n\n\n\n4.2.1 Transformer l’object en flextable\n\nUtilisez as_flextable() pour transformer probit.model en flextable.\nPour ne pas imprimer les étoiles de significativité, utilisez au préalable l’option options(show.signif.stars = FALSE).\nSupprimez le pied du tableau avec la commande delete_part(part = \"footer\").\n\n\n\nCode\noptions(show.signif.stars = FALSE)\nft &lt;- as_flextable(probit.model) %&gt;% \n  delete_part(part = \"footer\")\nft\n\n\nEstimateStandard Errorz valuePr(&gt;|z|)(Intercept)-7,4763,570-2,0940,0362learning0,1640,0533,0790,0021critical-0,0010,044-0,0130,9896advance-0,0620,042-1,4720,1410\n\n\n\nAnnoter le tableau en ajoutant au dessus des 3 premières colonnes de l’en-tête “Estimations” et des 2 dernières colonnes “Inférence”. Utilisez add_header_row() pour cela,\nUtilisez le thème theme_vanilla(),\nColorez en gris les lignes où la p-value (colonne nommée p.value) est supérieure à 0.05.\n\n\n\nCode\nft &lt;- ft %&gt;% \n  add_header_row(values = c(\"Estimations\", \"Inférence\"), colwidths = c(3, 2), top = TRUE) %&gt;% \n  theme_vanilla() %&gt;% \n  color(i = ~ p.value &gt; 0.05, color = \"gray\")\n  \nft\n\n\nEstimationsInférenceEstimateStandard Errorz valuePr(&gt;|z|)(Intercept)-7,4763,570-2,0940,0362learning0,1640,0533,0790,0021critical-0,0010,044-0,0130,9896advance-0,0620,042-1,4720,1410",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Pratique simple de flextable</span>"
    ]
  },
  {
    "objectID": "04-as-flextable-tables.html",
    "href": "04-as-flextable-tables.html",
    "title": "5  ‘flextable’ et le package ‘tables’",
    "section": "",
    "text": "5.1 tables\nLe package ‘tables’ https://dmurdoch.github.io/tables/ fournit une interface basée sur un système de formules pour calculer le contenu des tableaux et pour les formater.\nIl a été très inspiré par SAS PROC TABULATE.\nL’utilisateur peut créer un objet tableau en spécifiant une formule, avec le côté gauche indiquant les lignes et le côté droit indiquant les colonnes. La formule décrit les fonctions de résumé à appliquer et la manière de les organiser. Les objets peuvent être filtrés ou combinés en utilisant des opérations similaires à celles des matrices. Les tableaux peuvent être rendus sous forme de texte brut, de code LaTeX pour apparaître dans un document PDF, ou de code HTML pour un document web.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>'flextable' et le package 'tables'</span>"
    ]
  },
  {
    "objectID": "04-as-flextable-tables.html#un-exemple-de-tableau-dévènements-indésirables",
    "href": "04-as-flextable-tables.html#un-exemple-de-tableau-dévènements-indésirables",
    "title": "5  ‘flextable’ et le package ‘tables’",
    "section": "5.2 Un exemple de tableau d’évènements indésirables",
    "text": "5.2 Un exemple de tableau d’évènements indésirables\nOn va avoir besoin de deux tables “cliniques”.\n\n\nCode\nex_adae &lt;- formatters::ex_adae\nex_adae\n\n\nSTUDYIDUSUBJIDSUBJIDSITEIDAGESEXRACECOUNTRYINVIDARMARMCDACTARMACTARMCDSTRATA1STRATA2BMRKR1BMRKR2ITTFLSAFFLBMEASIFLBEP01FLRANDDTTRTSDTMTRTEDTMEOSSTTEOSDTEOSDYDCSREASDTHDTLSTALVDTstudy_duration_secsASEQAESEQAETERMAELLTAEDECODAEHLTAEHLGTAEBODSYSAESOCAESEVAESERARELASTDTMAENDTMASTDYAENDYAETOXGRcharactercharactercharactercharacterintegerfactorfactorfactorcharacterfactorfactorfactorfactorfactorfactornumericfactorfactorfactorfactorfactorDatePOSIXctPOSIXctfactorDateintegerfactorDateDatenumericintegerintegerfactorfactorfactorfactorfactorfactorfactorfactorfactorfactorPOSIXctPOSIXctintegerintegerfactorAB12345AB12345-BRA-1-id-134id-134BRA-147MWHITEBRABRA-1A: Drug XARM AA: Drug XARM ABS26.5LOWYYYN2021-06-092021-06-10 13:26:532023-06-11 01:05:17COMPLETED2023-06-117312023-06-112023-06-2963,113,90411trm B.2.1.2.1llt B.2.1.2.1dcd B.2.1.2.1hlt B.2.1.2hlgt B.2.1cl B.2cl BMODERATENN2022-02-16 00:00:002022-11-10 00:00:002515183AB12345AB12345-BRA-1-id-134id-134BRA-147MWHITEBRABRA-1A: Drug XARM AA: Drug XARM ABS26.5LOWYYYN2021-06-092021-06-10 13:26:532023-06-11 01:05:17COMPLETED2023-06-117312023-06-112023-06-2963,113,90422trm D.1.1.4.2llt D.1.1.4.2dcd D.1.1.4.2hlt D.1.1.4hlgt D.1.1cl D.1cl DMODERATENN2022-04-10 00:00:002022-12-21 00:00:003045593AB12345AB12345-BRA-1-id-134id-134BRA-147MWHITEBRABRA-1A: Drug XARM AA: Drug XARM ABS26.5LOWYYYN2021-06-092021-06-10 13:26:532023-06-11 01:05:17COMPLETED2023-06-117312023-06-112023-06-2963,113,90433trm A.1.1.1.2llt A.1.1.1.2dcd A.1.1.1.2hlt A.1.1.1hlgt A.1.1cl A.1cl AMODERATEYN2022-10-20 00:00:002023-06-05 00:00:004977252AB12345AB12345-BRA-1-id-134id-134BRA-147MWHITEBRABRA-1A: Drug XARM AA: Drug XARM ABS26.5LOWYYYN2021-06-092021-06-10 13:26:532023-06-11 01:05:17COMPLETED2023-06-117312023-06-112023-06-2963,113,90444trm A.1.1.1.2llt A.1.1.1.2dcd A.1.1.1.2hlt A.1.1.1hlgt A.1.1cl A.1cl AMODERATEYN2023-02-08 00:00:002023-04-15 00:00:006086742AB12345AB12345-BRA-1-id-141id-141BRA-135FWHITEBRABRA-1C: CombinationARM CC: CombinationARM CBS17.5HIGHYYYY2021-02-252021-02-28 23:47:162023-03-01 11:25:40COMPLETED2023-03-017312023-03-012023-03-3063,113,90411trm B.2.1.2.1llt B.2.1.2.1dcd B.2.1.2.1hlt B.2.1.2hlgt B.2.1cl B.2cl BMODERATENN2021-11-14 00:00:002021-11-21 00:00:002592663AB12345AB12345-BRA-1-id-141id-141BRA-135FWHITEBRABRA-1C: CombinationARM CC: CombinationARM CBS17.5HIGHYYYY2021-02-252021-02-28 23:47:162023-03-01 11:25:40COMPLETED2023-03-017312023-03-012023-03-3063,113,90422trm D.2.1.5.3llt D.2.1.5.3dcd D.2.1.5.3hlt D.2.1.5hlgt D.2.1cl D.2cl DMILDNY2021-12-28 00:00:002023-02-21 00:00:003037231AB12345AB12345-BRA-1-id-141id-141BRA-135FWHITEBRABRA-1C: CombinationARM CC: CombinationARM CBS17.5HIGHYYYY2021-02-252021-02-28 23:47:162023-03-01 11:25:40COMPLETED2023-03-017312023-03-012023-03-3063,113,90433trm A.1.1.1.1llt A.1.1.1.1dcd A.1.1.1.1hlt A.1.1.1hlgt A.1.1cl A.1cl AMILDNN2022-07-06 00:00:002022-07-29 00:00:004935161AB12345AB12345-BRA-1-id-141id-141BRA-135FWHITEBRABRA-1C: CombinationARM CC: CombinationARM CBS17.5HIGHYYYY2021-02-252021-02-28 23:47:162023-03-01 11:25:40COMPLETED2023-03-017312023-03-012023-03-3063,113,90444trm A.1.1.1.2llt A.1.1.1.2dcd A.1.1.1.2hlt A.1.1.1hlgt A.1.1cl A.1cl AMODERATEYN2022-10-21 00:00:002023-01-22 00:00:006006932AB12345AB12345-BRA-1-id-141id-141BRA-135FWHITEBRABRA-1C: CombinationARM CC: CombinationARM CBS17.5HIGHYYYY2021-02-252021-02-28 23:47:162023-03-01 11:25:40COMPLETED2023-03-017312023-03-012023-03-3063,113,90455trm A.1.1.1.1llt A.1.1.1.1dcd A.1.1.1.1hlt A.1.1.1hlgt A.1.1cl A.1cl AMILDNN2022-11-25 00:00:002023-01-07 00:00:006356781AB12345AB12345-BRA-1-id-141id-141BRA-135FWHITEBRABRA-1C: CombinationARM CC: CombinationARM CBS17.5HIGHYYYY2021-02-252021-02-28 23:47:162023-03-01 11:25:40COMPLETED2023-03-017312023-03-012023-03-3063,113,90466trm D.1.1.1.1llt D.1.1.1.1dcd D.1.1.1.1hlt D.1.1.1hlgt D.1.1cl D.1cl DSEVEREYN2023-02-28 00:00:002023-03-01 00:00:007307315n: 1934\n\n\nCode\nex_adsl &lt;- formatters::ex_adsl\nex_adsl\n\n\nSTUDYIDUSUBJIDSUBJIDSITEIDAGESEXRACECOUNTRYINVIDARMARMCDACTARMACTARMCDSTRATA1STRATA2BMRKR1BMRKR2ITTFLSAFFLBMEASIFLBEP01FLRANDDTTRTSDTMTRTEDTMEOSSTTEOSDTEOSDYDCSREASDTHDTLSTALVDTstudy_duration_secscharactercharactercharactercharacterintegerfactorfactorfactorcharacterfactorfactorfactorfactorfactorfactornumericfactorfactorfactorfactorfactorDatePOSIXctPOSIXctfactorDateintegerfactorDateDatenumericAB12345AB12345-CHN-3-id-128id-128CHN-332MASIANCHNCHN-3A: Drug XARM AA: Drug XARM ACS214.4MEDIUMYYYY2019-09-282019-09-30 20:45:382021-09-30 08:24:02COMPLETED2021-09-307312021-09-302021-10-2263,113,904AB12345AB12345-CHN-15-id-262id-262CHN-1535MBLACK OR AFRICAN AMERICANCHNCHN-15C: CombinationARM CC: CombinationARM CCS14.1LOWYYNN2019-10-022019-10-02 18:41:202021-10-02 06:19:44COMPLETED2021-10-027312021-10-022021-10-2463,113,904AB12345AB12345-RUS-3-id-378id-378RUS-330FASIANRUSRUS-3C: CombinationARM CC: CombinationARM CAS12.8HIGHYYYN2019-09-302019-10-04 12:55:282021-10-04 00:33:52COMPLETED2021-10-047312021-10-042021-10-1563,113,904AB12345AB12345-CHN-11-id-220id-220CHN-1126FASIANCHNCHN-11B: PlaceboARM BB: PlaceboARM BBS210.3MEDIUMYYYY2019-10-032019-10-05 23:09:232021-10-05 10:47:47COMPLETED2021-10-057312021-10-052021-10-2463,113,904AB12345AB12345-CHN-7-id-267id-267CHN-740MASIANCHNCHN-7B: PlaceboARM BB: PlaceboARM BCS16.2LOWYYNN2019-10-052019-10-06 09:45:362021-10-05 21:24:00COMPLETED2021-10-057312021-10-052021-11-0363,113,904AB12345AB12345-CHN-15-id-201id-201CHN-1549MASIANCHNCHN-15C: CombinationARM CC: CombinationARM CCS26.9MEDIUMYYYN2019-10-102019-10-10 01:00:042021-09-24 06:00:13DISCONTINUED2021-09-24716WITHDRAWAL BY PARENT/GUARDIAN2021-09-242021-10-2263,113,904AB12345AB12345-USA-1-id-45id-45USA-134FASIANUSAUSA-1A: Drug XARM AA: Drug XARM ACS10.5LOWYYNN2019-10-082019-10-10 16:08:242021-10-10 03:46:48COMPLETED2021-10-107312021-10-102021-10-2463,113,904AB12345AB12345-USA-1-id-261id-261USA-132FASIANUSAUSA-1B: PlaceboARM BB: PlaceboARM BCS12.9HIGHYYYN2019-10-072019-10-11 02:57:152021-10-10 14:35:39COMPLETED2021-10-107312021-10-102021-10-2663,113,904AB12345AB12345-NGA-11-id-173id-173NGA-1124FBLACK OR AFRICAN AMERICANNGANGA-11C: CombinationARM CC: CombinationARM CCS25.0LOWYYYY2019-10-122019-10-14 19:11:182021-10-14 06:49:42COMPLETED2021-10-147312021-10-142021-10-2563,113,904AB12345AB12345-CHN-1-id-307id-307CHN-124MASIANCHNCHN-1B: PlaceboARM BB: PlaceboARM BCS14.6LOWYYYN2019-10-122019-10-15 17:37:132021-10-15 05:15:37COMPLETED2021-10-157312021-10-152021-11-0363,113,904n: 400\n\n\nOn va préparer quelques pré-calculs et deux fonctions de résumé.\n\n\nCode\nsubject_counts &lt;- table(ex_adsl$ARM)\n\ncountpercentid &lt;- function(num, ARM) {\n  n &lt;- length(unique(num))\n  if (n == 0) {\n    pct &lt;- 0\n  } else {\n    pct &lt;- 100*n/subject_counts[ARM[1]]\n  }\n  sprintf(\"%d (%.2f%%)\", length(unique(num)), pct)\n}\n\ncount &lt;- function(x) sprintf(\"(N=%d)\", length(x))\n\n\nOn peut enfin exprimer le tableau de suivi des évènements indésirables avec ‘tables’.\n\n\nCode\nlibrary(tables)\nbody &lt;- tabular( \n  Heading(\"Patients with at least one event\")*1*\n    Heading(\"\")*countpercentid*Arguments(ARM = ARM)*\n    Heading()*USUBJID +\n    Heading(\"Total number of events\")*1*Heading(\"\")*1 +\n    Heading()*AEBODSYS*\n    (Heading(\"Patients with at least one event\")*\n       Percent(denom = ARM, fn = countpercentid)*\n       Heading()*USUBJID +\n       Heading(\"Total number of events\")*1 +\n       Heading()*AEDECOD*DropEmpty(which = \"row\")*\n       Heading()*Percent(denom = ARM, fn = countpercentid)*\n       Heading()*USUBJID) ~ \n    Heading()*ARM, \ndata = ex_adae )\n\n\n\n\nCode\nbody\n\n\n\n\n\n\n\nA: Drug X\nB: Placebo\nC: Combination\n\n\n\n\nPatients with at least one event\n\n122 (91.04%)\n123 (91.79%)\n120 (90.91%)\n\n\nTotal number of events\n\n609\n622\n703\n\n\ncl A.1\nPatients with at least one event\n78 (58.21%)\n75 (55.97%)\n89 (66.42%)\n\n\n \nTotal number of events\n132\n130\n160\n\n\n \ndcd A.1.1.1.1\n50 (37.31%)\n45 (33.58%)\n63 (47.01%)\n\n\n \ndcd A.1.1.1.2\n48 (35.82%)\n48 (35.82%)\n50 (37.31%)\n\n\ncl B.1\nPatients with at least one event\n47 (35.07%)\n49 (36.57%)\n43 (32.09%)\n\n\n \nTotal number of events\n56\n60\n62\n\n\n \ndcd B.1.1.1.1\n47 (35.07%)\n49 (36.57%)\n43 (32.09%)\n\n\ncl B.2\nPatients with at least one event\n79 (58.96%)\n74 (55.22%)\n85 (63.43%)\n\n\n \nTotal number of events\n129\n138\n143\n\n\n \ndcd B.2.1.2.1\n49 (36.57%)\n44 (32.84%)\n52 (38.81%)\n\n\n \ndcd B.2.2.3.1\n48 (35.82%)\n54 (40.30%)\n51 (38.06%)\n\n\ncl C.1\nPatients with at least one event\n43 (32.09%)\n46 (34.33%)\n43 (32.09%)\n\n\n \nTotal number of events\n55\n63\n64\n\n\n \ndcd C.1.1.1.3\n43 (32.09%)\n46 (34.33%)\n43 (32.09%)\n\n\ncl C.2\nPatients with at least one event\n35 (26.12%)\n48 (35.82%)\n55 (41.04%)\n\n\n \nTotal number of events\n48\n53\n65\n\n\n \ndcd C.2.1.2.1\n35 (26.12%)\n48 (35.82%)\n55 (41.04%)\n\n\ncl D.1\nPatients with at least one event\n79 (58.96%)\n67 (50.00%)\n80 (59.70%)\n\n\n \nTotal number of events\n127\n106\n135\n\n\n \ndcd D.1.1.1.1\n50 (37.31%)\n42 (31.34%)\n51 (38.06%)\n\n\n \ndcd D.1.1.4.2\n48 (35.82%)\n42 (31.34%)\n50 (37.31%)\n\n\ncl D.2\nPatients with at least one event\n47 (35.07%)\n58 (43.28%)\n57 (42.54%)\n\n\n \nTotal number of events\n62\n72\n74\n\n\n \ndcd D.2.1.5.3\n47 (35.07%)\n58 (43.28%)\n57 (42.54%)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>'flextable' et le package 'tables'</span>"
    ]
  },
  {
    "objectID": "04-as-flextable-tables.html#la-fonction-as_flextable",
    "href": "04-as-flextable-tables.html#la-fonction-as_flextable",
    "title": "5  ‘flextable’ et le package ‘tables’",
    "section": "5.3 La fonction as_flextable",
    "text": "5.3 La fonction as_flextable\n\n\nCode\nlibrary(flextable)\nas_flextable(body, spread_first_col = TRUE, add_tab = TRUE) |&gt;\n  align(j = 1, part = \"all\", align = \"left\") |&gt; \n  padding(padding = 4, part = \"all\") |&gt; \n  add_header_row(\n    values = c(\"\", fmt_header_n(subject_counts, newline = FALSE)),\n    top = FALSE) |&gt; \n  hline(i = 1, part = \"header\", border = fp_border_default(width = 0))\n\n\nA: Drug XB: PlaceboC: Combination(N=134)(N=134)(N=132)Patients with at least one event122 (91.04%)123 (91.79%)120 (90.91%)Total number of events609622703cl A.1 Patients with at least one event78 (58.21%)75 (55.97%)89 (66.42%) Total number of events132130160 dcd A.1.1.1.150 (37.31%)45 (33.58%)63 (47.01%) dcd A.1.1.1.248 (35.82%)48 (35.82%)50 (37.31%)cl B.1 Patients with at least one event47 (35.07%)49 (36.57%)43 (32.09%) Total number of events566062 dcd B.1.1.1.147 (35.07%)49 (36.57%)43 (32.09%)cl B.2 Patients with at least one event79 (58.96%)74 (55.22%)85 (63.43%) Total number of events129138143 dcd B.2.1.2.149 (36.57%)44 (32.84%)52 (38.81%) dcd B.2.2.3.148 (35.82%)54 (40.30%)51 (38.06%)cl C.1 Patients with at least one event43 (32.09%)46 (34.33%)43 (32.09%) Total number of events556364 dcd C.1.1.1.343 (32.09%)46 (34.33%)43 (32.09%)cl C.2 Patients with at least one event35 (26.12%)48 (35.82%)55 (41.04%) Total number of events485365 dcd C.2.1.2.135 (26.12%)48 (35.82%)55 (41.04%)cl D.1 Patients with at least one event79 (58.96%)67 (50.00%)80 (59.70%) Total number of events127106135 dcd D.1.1.1.150 (37.31%)42 (31.34%)51 (38.06%) dcd D.1.1.4.248 (35.82%)42 (31.34%)50 (37.31%)cl D.2 Patients with at least one event47 (35.07%)58 (43.28%)57 (42.54%) Total number of events627274 dcd D.2.1.5.347 (35.07%)58 (43.28%)57 (42.54%)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>'flextable' et le package 'tables'</span>"
    ]
  },
  {
    "objectID": "05-grid.html",
    "href": "05-grid.html",
    "title": "6  ‘flextable’ et les grid graphics",
    "section": "",
    "text": "6.1 Illustration avec grid\nUne des fonctionnalités du package flextable est la capacité à travailler avec un format ‘grid graphics’. La fonction gen_grob() génére un ‘grob’ (Graphical Object) à partir d’un flextable, ce dernier peut ensuite être ajouté à un graphique ggplot grace au package ‘patchwork’ ou avec le package ‘grid’.\nCes fonctionnalités nécessitent l’utilisation d’une sortie graphique utilisant ‘systemfonts’ : svglite::svglite(), ragg::agg_png() ou ggiraph::dsvg(). Ces packages doivent être utilisés pour garantir que toutes les polices que vous utilisez seront reconnues par le moteur graphique R.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>'flextable' et les grid graphics</span>"
    ]
  },
  {
    "objectID": "05-grid.html#illustration-avec-grid",
    "href": "05-grid.html#illustration-avec-grid",
    "title": "6  ‘flextable’ et les grid graphics",
    "section": "",
    "text": "6.1.1 Créer un tableau\n\n\nCode\nlibrary(palmerpenguins)\nft &lt;- as_flextable(penguins)\nft\n\n\nspeciesislandbill_length_mmbill_depth_mmflipper_length_mmbody_mass_gsexyearfactorfactornumericnumericintegerintegerfactorintegerAdelieTorgersen39.118.71813,750male2,007AdelieTorgersen39.517.41863,800female2,007AdelieTorgersen40.318.01953,250female2,007AdelieTorgersen2,007AdelieTorgersen36.719.31933,450female2,007AdelieTorgersen39.320.61903,650male2,007AdelieTorgersen38.917.81813,625female2,007AdelieTorgersen39.219.61954,675male2,007AdelieTorgersen34.118.11933,4752,007AdelieTorgersen42.020.21904,2502,007n: 344\n\n\n\n\n6.1.2 Utilisation de gen_grob et de grid\nLe seul élément de flextable à utiliser est la fonction gen_grob(), le reste du code concerne des opérations ‘grid’.\n\n\nCode\nlibrary(grid)\ngrid.raster(magick::image_read(\"img/lter_penguins.png\"))\ngrid.rect(gp = gpar(col = \"transparent\", fill = radialGradient(\n  colours = c(\n    adjustcolor(\"white\", .6),\n    adjustcolor(\"#f2af00\", .8),\n    adjustcolor(\"#c32900\", .7)\n  ),\n  stops = c(0, .7, 1)\n)))\ngrid.text(y = .1, x = .95, just = \"right\",\n  label = \"Size measurements for adult foraging penguins near Palmer Station, Antarctica\", \n  gp = gpar(col = \"white\", fontsize = 10, fontfamily = \"Open Sans\", fontface = \"italic\"))\ngrid.text(y = .9, \n  label = \"Made with packages 'grid', 'flextable', 'ragg' and 'palmerpenguins'\", \n  gp = gpar(col = \"white\", fontsize = 14, fontfamily = \"Permanent Marker\"))\n\npushViewport(viewport(width = .95, height = .75, gp = gpar(col = \"transparent\")))\ngrid.circle(gp = gpar(fill = adjustcolor(\"white\", .9)), r = .4)\ngrid.draw(gen_grob(ft, just = \"center\", scaling = \"min\", fit = \"width\"))\npopViewport()",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>'flextable' et les grid graphics</span>"
    ]
  },
  {
    "objectID": "05-grid.html#superposer-avec-un-ggplot",
    "href": "05-grid.html#superposer-avec-un-ggplot",
    "title": "6  ‘flextable’ et les grid graphics",
    "section": "6.2 Superposer avec un ggplot",
    "text": "6.2 Superposer avec un ggplot\nLa dataviz dont nous nous sommes inspiré est disponible à l’adresse https://insights.datylon.com/stories/oDHVikVxaCaCGWRFGMdPgA.\n\n6.2.1 Récupérer les données\n\n\nCode\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(magick)\n## Linking to ImageMagick 6.9.11.60\n## Enabled features: fontconfig, freetype, fftw, heic, lcms, pango, webp, x11\n## Disabled features: cairo, ghostscript, raw, rsvg\n## Using 2 threads\n\nscoring_data &lt;- read_excel(\"data/default_workbook.xlsx\",\n           sheet = \"Scoring data\") %&gt;% \n  rename(name = NAME, pts = PTS, fgp = \"FG%\", group = Group) %&gt;% \n  mutate(pts = as.double(pts),\n         fgp = as.double(fgp))\nscoring_data\n\n\nnamefgpptsgroupcharacternumericnumericcharacterJoel Embiid49.930.6Ineffective high-scorerLeBron James52.430.3Effective high-scorerGiannis Antetokounmpo55.329.9Effective high-scorerKevin Durant51.829.9Effective high-scorerLuka Doncic45.728.4Ineffective high-scorerTrae Young46.028.4Ineffective high-scorerDeMar DeRozan50.427.9Effective high-scorerKyrie Irving46.927.4Ineffective high-scorerJa Morant49.327.4Ineffective high-scorerNikola Jokic58.327.1Effective high-scorern: 581\n\n\nPour les images du tableau, il faut créer manuellement un data.frame. On va télécharger chaque image dans un fichier temporaire car flextable ne gère que les images disponible localement.\n\n\nCode\nhead_shot &lt;- tibble::tribble(\n  ~name, ~url,\n  \"Joel Embiid\", \"https://cdn.nba.com/headshots/nba/latest/1040x760/203954.png\",\n  \"LeBron James\", \"https://cdn.nba.com/headshots/nba/latest/1040x760/2544.png\",\n  \"Giannis Antetokounmpo\", \"https://cdn.nba.com/headshots/nba/latest/1040x760/203507.png\",\n  \"Kevin Durant\", \"https://cdn.nba.com/headshots/nba/latest/1040x760/201142.png\",\n  \"Trae Young\", \"https://cdn.nba.com/headshots/nba/latest/1040x760/1629027.png\",\n  \"Luka Doncic\", \"https://cdn.nba.com/headshots/nba/latest/1040x760/1629029.png\"\n) %&gt;% \n  mutate(url = map_chr(url, function(z) {\n    path &lt;- tempfile(fileext = \".png\")\n    image_read(z) %&gt;% \n      image_resize(geometry = \"144x\") %&gt;% \n      image_write(path = path)\n    path\n  }))\n\n\nLe tableau ‘Q3_data’ va être utilisé lors de la construction du ggplot.\n\n\nCode\nQ3_data &lt;- summarise(scoring_data, \n          pts = quantile(pts, probs = .75),\n          fgp = quantile(fgp, probs = .75)\n          )\nQ3_data\n\n\nptsnumeric11.3fgpnumeric50\n\n\nLe tableau ‘scoring_highlight’ va être le tableau principal.\n\n\nCode\nscoring_highlight &lt;- scoring_data %&gt;% \n  arrange(desc(pts), desc(fgp)) %&gt;% \n  slice_max(pts, n = 6) %&gt;%\n  left_join(head_shot, by = \"name\")\nscoring_highlight\n\n\nnamefgpptsgroupurlcharacternumericnumericcharactercharacterJoel Embiid49.930.6Ineffective high-scorer/tmp/Rtmpwonutx/file18777c329cc5.pngLeBron James52.430.3Effective high-scorer/tmp/Rtmpwonutx/file18772ada6edc.pngGiannis Antetokounmpo55.329.9Effective high-scorer/tmp/Rtmpwonutx/file187764944e64.pngKevin Durant51.829.9Effective high-scorer/tmp/Rtmpwonutx/file1877454c5c6f.pngTrae Young46.028.4Ineffective high-scorer/tmp/Rtmpwonutx/file187767c86f32.pngLuka Doncic45.728.4Ineffective high-scorer/tmp/Rtmpwonutx/file18773bf81b9c.pngn: 6\n\n\n\n\n6.2.2 Créer le flextable\n\n\nCode\ntheme_scorer &lt;- function(x) {\n  border_remove(x) %&gt;% \n    valign(valign = \"center\", part = \"all\") %&gt;% \n    align(align = \"center\", part = \"all\") %&gt;% \n    fontsize(part = \"all\", size = 20) %&gt;% \n    bold(part = \"header\", bold = TRUE) %&gt;%\n    bold(part = \"body\", j = 1, bold = TRUE) %&gt;% \n    color(color = \"#b17268\", part = \"header\") %&gt;% \n    bg(part = \"header\", bg = \"transparent\")\n}\n\nft &lt;- as_grouped_data(scoring_highlight, groups = c(\"name\"), expand_single = TRUE) %&gt;% \n  as_flextable(hide_grouplabel = TRUE, col_keys = c(\"url\", \"fgp\", \"pts\")) %&gt;% \n  set_header_labels(url = \"\", fgp = \"Field goal\", pts = \"Points\") %&gt;%\n  mk_par(j = \"url\", i = ~ !is.na(url),\n         value = as_paragraph(\n           as_image(url, width = .75, height = 0.54),\n           \"\\n\",\n           as_i(name)\n           )\n         ) %&gt;% \n  theme_scorer() %&gt;% \n  align(i = ~!is.na(name), align = \"left\", part = \"body\") %&gt;% \n  bg(i = ~ group %in% \"Effective high-scorer\", bg = \"#f8b26399\") %&gt;%\n  bg(i = ~ group %in% \"Ineffective high-scorer\", bg = \"#b1726899\") %&gt;%\n  hline(i = rep(c(FALSE, TRUE, FALSE, TRUE), length = nrow_part(.))) %&gt;% \n  autofit()\n\n\nNous pouvons déjà transformer le tableau en un graphique.\n\n\nCode\nplot(ft, fit = \"fixed\", scaling = \"fixed\", just = \"centre\")\n\n\n\n\n\n\n\n\n\n\n\n6.2.3 Création du ggplot\n\n\nCode\ngg &lt;- scoring_data %&gt;% \n  ggplot(mapping = aes(x = fgp, y = pts, color = group)) + \n  geom_point(size = 3, alpha = .7, show.legend = FALSE) +\n  scale_color_manual(\n    values = c(\n      \"Effective high-scorer\" = \"#f8b263\",\n      \"Ineffective low-scorer\" = \"#819eb2\",\n      \"Ineffective high-scorer\" = \"#b17268\",\n      \"Effective low-scorer\" = \"#dad162\"\n      )) +\n  scale_y_continuous(limits = c(0, 40)) + \n  geom_hline(data = Q3_data, aes(yintercept = `pts`)) +\n  geom_vline(data = Q3_data, aes(xintercept = fgp)) +\n  ggforce::geom_mark_rect(data = scoring_highlight, \n                   mapping = aes(color = NULL),\n                   expand = unit(3, \"mm\"),\n                   show.legend = FALSE) +\n  annotate(geom = \"text\", x = 100, y = Q3_data$pts,\n           label = \"Effective\\nhigh-scorer\", color = \"#f8b263\",\n           hjust = 1, vjust = -1) + \n  annotate(geom = \"text\", x = 100, y = Q3_data$pts,\n           label = \"Effective\\nlow-scorer\", color = \"#dad162\",\n           hjust = 1, vjust = 2) + \n  annotate(geom = \"text\", x = 0, y = Q3_data$pts,\n           label = \"Low-Effective\\nhigh-scorer\", color = \"#819eb2\",\n           hjust = 0.2, vjust = 2) + \n  annotate(geom = \"text\", x = 0, y = Q3_data$pts,\n           label = \"Low-Effective\\nlow-scorer\", color = \"#b17268\",\n           hjust = .2, vjust = -1) + \n  theme_minimal()\ngg\n\n\n\n\n\n\n\n\n\n\n\n6.2.4 Ajout du flextable dans le ggplot\n\n\nCode\nlibrary(patchwork)\ngg + inset_element(\n    gen_grob(ft, fit = \"width\"),\n    left = 0.65, bottom = .65, \n    right = 1, top = 1\n  )  + theme(\n    plot.background = element_rect(fill = \"transparent\"),\n    panel.background = element_rect(fill = \"transparent\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n6.2.5 Ajout du flextable à côté du ggplot\n\n\nCode\ngg + gen_grob(ft, fit = \"width\")\n\n\n\n\n\n\n\n\n\nCode\n# gg + gen_grob(ft, fit = \"width\") + plot_layout(ncol = 2, widths = c(3, 1))",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>'flextable' et les grid graphics</span>"
    ]
  }
]